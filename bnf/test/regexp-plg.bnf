/*

BNF Grammar of Regular Expressions
https://www2.cs.sfu.ca/~cameron/Teaching/384/99-3/regexp-plg.html

Following the precedence rules given previously, a BNF grammar for
Perl-style regular expressions can be constructed as follows.

*/

<RE>	::=	<union> | <simple_RE>
;
<union>	::=	<RE> "|" <simple_RE>
;
<simple_RE>	::=	<concatenation> | <basic_RE>
;
<concatenation>	::=	<simple_RE> <basic_RE>
;
<basic_RE>	::=	<star> | <plus> | <elementary_RE>
;
<star>	::=	<elementary_RE> "*"
;
<plus>	::=	<elementary_RE> "+"
;
<elementary_RE>	::=	<group> | <any> | <eos> | <char> | <set>
;
<group>	::=	"(" <RE> ")"
;
<any>	::=	"."
;
<eos>	::=	"$"
;
<char>	::=	any non metacharacter | "\" metacharacter
;
<set>	::=	<positive_set> | <negative_set>
;
<positive_set>	::=	"[" <set_items> "]"
;
<negative_set>	::=	"[^" <set_items> "]"
;
<set_items>	::=	<set_item> | <set_item> <set_items>
;
<set_items>	::=	<range> | <char>
;
<range>	::=	<char> "-" <char>
;
